import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load your ERP accounting data into a pandas DataFrame
data = pd.read_csv('accounting_data.csv')

# Preprocess the data if needed (e.g., handle missing values, categorical variables)

# Split the data into features (X) and target variable (y)
X = data.drop('cash_flow', axis=1)  # Adjust the column name according to your data
y = data['cash_flow']  # Adjust the column name according to your data

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Train the model using the training data
model.fit(X_train, y_train)

# Make predictions on the test data
predictions = model.predict(X_test)

# Evaluate the model (e.g., calculate metrics like mean squared error, R-squared)

# Once the model is trained and evaluated, you can use it to predict cash flows for new data
new_data = pd.read_csv('new_accounting_data.csv')  # Load new data for prediction
new_predictions = model.predict(new_data)

# Use the new_predictions for further analysis or integration into your ERP accounting system
